@model IAS_Handyman.Models.ServiceRequest

@{
    ViewBag.Title = "Editar agendamiento";
}

<head>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.2/jquery-ui.min.js"></script>
    <script src="https://rawgithub.com/trentrichardson/jQuery-Timepicker-Addon/master/jquery-ui-timepicker-addon.js"></script>
    <script src="https://rawgithub.com/trentrichardson/jQuery-Timepicker-Addon/master/jquery-ui-sliderAccess.js"></script>

    <link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.2/themes/smoothness/jquery-ui.css" type="text/css" media="all" />
    <style>
        .ui-timepicker-div .ui-widget-header {
            margin-bottom: 8px;
        }

        .ui-timepicker-div dl {
            text-align: left;
        }

            .ui-timepicker-div dl dt {
                height: 25px;
                margin-bottom: -25px;
            }

            .ui-timepicker-div dl dd {
                margin: 0 10px 10px 65px;
            }

        .ui-timepicker-div td {
            font-size: 90%;
        }

        .ui-tpicker-grid-label {
            background: none;
            border: none;
            margin: 0;
            padding: 0;
        }

        .ui-timepicker-rtl {
            direction: rtl;
        }

            .ui-timepicker-rtl dl {
                text-align: right;
            }

                .ui-timepicker-rtl dl dd {
                    margin: 0 65px 10px 10px;
                }
    </style>
</head>

<h2>Editar agendamiento</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 4 })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ScheduleDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ScheduleDate, new { htmlAttributes = new { @class = "form-control", @Type = "Date", @Value = Model.ScheduleDate.ToString("yyyy-MM-dd") } })
            @Html.ValidationMessageFor(model => model.ScheduleDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsEmergency, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsEmergency)
                @Html.ValidationMessageFor(model => model.IsEmergency, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <hr />
    <h4>Información del técnico</h4>
    <hr />

    <div class="form-group">
        <table>
            <tr>
                <td>
                    <input type="button" value="Asignar técnico" onclick="showTechnicianModal()" class="btn btn-primary" style="background-color:green;color:white;margin-left:20px" />
                </td>

                <td>
                    <div style="margin-left:10px" id="div_technician">No se ha seleccionado ningún técnico, el servicio quedará en estado "Generado"</div>
                </td>
            </tr>
        </table>
    </div>

    @if (Model.CurrentStatus != null && Model.CurrentStatus.Id < 2)
    {
        <hr />
        <h4>Información de la atención</h4>
        <hr />
        <p>Diligencie los siguientes datos, y al terminar presione el botón "Guardar información" para registrar la atención del servicio.</p>
        <div class="form-group">
            @Html.LabelFor(model => model.StartDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDateTime, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
        <div class="form-group" hidden>
            @Html.LabelFor(model => model.StartDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden>
            @Html.LabelFor(model => model.EndDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDateTime, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group" hidden>
        @Html.LabelFor(model => model.Hours, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Hours, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
            @Html.ValidationMessageFor(model => model.Hours, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" hidden>
        @Html.LabelFor(model => model.CreationDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CreationDateTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CreationDateTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" hidden>
        @Html.LabelFor(model => model.ModificationDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ModificationDateTime, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now } })
            @Html.ValidationMessageFor(model => model.ModificationDateTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" hidden>
        @Html.LabelFor(model => model.RegisterStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RegisterStatus, new { htmlAttributes = new { @class = "form-control", @Value = "1" } })
            @Html.ValidationMessageFor(model => model.RegisterStatus, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (Model.SelectedTechnicianId == 0)
    {
        <div hidden>
            @Html.EditorFor(model => model.SelectedTechnicianId, new { @Value = "0" })
        </div>
    }
    else
    {
        <div hidden>
            @Html.EditorFor(model => model.SelectedTechnicianId)
        </div>
    }

    <div class="form-group">
        @if (Model.CurrentStatus != null)
        {
            <table>
                <tr>
                    <td>
                        <div class="col-md-10">
                            <input type="button" value="Cancelar agendamiento" class="btn btn-default btn-danger" onclick="cancelService(@Model.Id)" />
                        </div>
                    </td>

                    <td>
                        <div class="col-md-10">
                            <input type="submit" value="Guardar información" class="btn btn-default" style="background-color:lightgray" />
                        </div>
                    </td>
                </tr>
            </table>
        }
        else
        {
            <div class="col-md-10">
                <input id="btn_submit" type="submit" value="Guardar información" class="btn btn-default" style="background-color:lightgray" />
            </div>
        }
    </div>
</div>
}

<div>
    @Html.ActionLink("Regresar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<div class="form-group">
    <div class="modal fade" tabindex="-1" role="dialog" id="modalTechnicians" data-backdrop="static">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">

            </div>
        </div>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>

<script>
    $(function () {
        $("#ScheduleDate").click(function () {
            $(this).datepicker({
                dateFormat: 'dd-mm-yy',
                changeMonth: true,
                changeYear: true
            }).focus();
        });
    });

    $(window).on('load', function () {
        selectTechnicianOnLoad();
    });

    function cancelService(id) {

        var r = confirm("¿Realmente desea CANCELAR el agendamiento del servicio?");

        if (r == true)
        {
            var url = "@Url.Action("CancelService")";

            // Obtains the technician data with register Id
            $.get(url, { identification: id }, function (data) {
                if (data != null)
                {
                    if (data.includes("OK"))
                    {
                        window.location.href = '@Url.Action("Index", "ServiceRequests")';
                    }
                    else
                    {
                        alert(data);
                    }
                }
            });
        }
    }

    function selectTechnicianOnLoad() {
        var id = $("#SelectedTechnicianId").val();

        var url = "@Url.Action("GetTechnician")";

        // Obtains the technician data with register Id
        $.get(url, { identification: id }, function (data) {
            if (data != null)
            {
                $("#div_technician").html("");
                $("#div_technician").html(data);

                $("#SelectedTechnicianId").val(id);
            }
        });
    }

    function showTechnicianModal() {
        var url = "@Url.Action("GetTechnicians")";

        // Show modal for techincians
        $.get(url, "", function (data) {
            $('.modal-content').html(data);
            $("#modalTechnicians").modal('show');
        });
    }

    function hideTechnicianmodal() {
        $("#modalTechnicians").modal('hide');
        $('.modal-content').html("");
    }

    function selectTechnician(id) {
        hideTechnicianmodal();

        var url = "@Url.Action("GetTechnician")";

        // Obtains the technician data with register Id
        $.get(url, { identification: id }, function (data) {
            if (data != null)
            {
                $("#div_technician").html("");
                $("#div_technician").html(data);

                $("#SelectedTechnicianId").val(id);
            }
        });
    }
</script>
